@model ScrumProject.Models.Story

@{
    ViewBag.Title = "Create";
}

<h2>Create new Story</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Story</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Description)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Description)
            @Html.ValidationMessageFor(model => model.Description)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Tests)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Tests)
            @Html.ValidationMessageFor(model => model.Tests)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Priority)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(m => m.Priority, new SelectList(new ScrumProject.ViewModels.PriorityViewModel().GetPriorities(), "Id", "PriorityCode"))
            @*@Html.EditorFor(model => model.Priority)*@
            @Html.ValidationMessageFor(model => model.Priority)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.BusinessValue)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.BusinessValue)
            @Html.ValidationMessageFor(model => model.BusinessValue)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Status)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(m => m.Status, new SelectList(new ScrumProject.ViewModels.StatusViewModel().GetStatus(), "Id", "StatusCode"))
            @*@Html.EditorFor(model => model.Status)*@
            @Html.ValidationMessageFor(model => model.Status)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Notes)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Notes)
            @Html.ValidationMessageFor(model => model.Notes)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Points)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Points)
            @Html.ValidationMessageFor(model => model.Points)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ProjectId, "Project")
        </div>
        <div class="editor-field">
            @Html.DropDownList("ProjectId", "Select Project")
            @Html.ValidationMessageFor(model => model.ProjectId)
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index", new { projectId = ViewBag.newId}, null)
</div>
